/**
 * This class file was automatically generated by jASN1 (http://www.openmuc.org)
 */

package org.openmuc.josistack.internal.acse.asn1;

import org.openmuc.jasn1.ber.BerByteArrayOutputStream;
import org.openmuc.jasn1.ber.BerIdentifier;
import org.openmuc.jasn1.ber.BerLength;
import org.openmuc.jasn1.ber.types.BerBitString;
import org.openmuc.jasn1.ber.types.BerInteger;
import org.openmuc.jasn1.ber.types.BerObjectIdentifier;
import org.openmuc.jasn1.ber.types.string.BerGraphicString;

import java.io.IOException;
import java.io.InputStream;

public final class AARQ_apdu {

    public final static BerIdentifier identifier = new BerIdentifier(BerIdentifier.APPLICATION_CLASS, BerIdentifier.CONSTRUCTED, 0);
    protected BerIdentifier id;

    public byte[] code = null;
    public BerBitString protocol_version = null;

    public BerObjectIdentifier application_context_name = null;

    public AP_title called_AP_title = null;

    public AE_qualifier called_AE_qualifier = null;

    public BerInteger called_AP_invocation_identifier = null;

    public BerInteger called_AE_invocation_identifier = null;

    public AP_title calling_AP_title = null;

    public AE_qualifier calling_AE_qualifier = null;

    public BerInteger calling_AP_invocation_identifier = null;

    public BerInteger calling_AE_invocation_identifier = null;

    public BerBitString sender_acse_requirements = null;

    public BerObjectIdentifier mechanism_name = null;

    public Authentication_value calling_authentication_value = null;

    public Application_context_name_list application_context_name_list = null;

    public BerGraphicString implementation_information = null;

    public Association_information user_information = null;

    public AARQ_apdu() {
        id = identifier;
    }

    public AARQ_apdu(byte[] code) {
        id = identifier;
        this.code = code;
    }

    public AARQ_apdu(BerBitString protocol_version, BerObjectIdentifier application_context_name, AP_title called_AP_title, AE_qualifier
            called_AE_qualifier, BerInteger called_AP_invocation_identifier, BerInteger called_AE_invocation_identifier, AP_title
            calling_AP_title, AE_qualifier calling_AE_qualifier, BerInteger calling_AP_invocation_identifier, BerInteger
            calling_AE_invocation_identifier, BerBitString sender_acse_requirements, BerObjectIdentifier mechanism_name,
                     Authentication_value calling_authentication_value, Application_context_name_list application_context_name_list,
                     BerGraphicString implementation_information, Association_information user_information) {
        id = identifier;
        this.protocol_version = protocol_version;
        this.application_context_name = application_context_name;
        this.called_AP_title = called_AP_title;
        this.called_AE_qualifier = called_AE_qualifier;
        this.called_AP_invocation_identifier = called_AP_invocation_identifier;
        this.called_AE_invocation_identifier = called_AE_invocation_identifier;
        this.calling_AP_title = calling_AP_title;
        this.calling_AE_qualifier = calling_AE_qualifier;
        this.calling_AP_invocation_identifier = calling_AP_invocation_identifier;
        this.calling_AE_invocation_identifier = calling_AE_invocation_identifier;
        this.sender_acse_requirements = sender_acse_requirements;
        this.mechanism_name = mechanism_name;
        this.calling_authentication_value = calling_authentication_value;
        this.application_context_name_list = application_context_name_list;
        this.implementation_information = implementation_information;
        this.user_information = user_information;
    }

    public int encode(BerByteArrayOutputStream berOStream, boolean explicit) throws IOException {

        int codeLength;

        if (code != null) {
            codeLength = code.length;
            for (int i = code.length - 1; i >= 0; i--) {
                berOStream.write(code[i]);
            }
        } else {
            codeLength = 0;
            int sublength;

            if (user_information != null) {
                codeLength += user_information.encode(berOStream, false);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30)).encode(berOStream);
            }

            if (implementation_information != null) {
                codeLength += implementation_information.encode(berOStream, false);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 29)).encode(berOStream);
            }

            if (application_context_name_list != null) {
                codeLength += application_context_name_list.encode(berOStream, false);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)).encode(berOStream);
            }

            if (calling_authentication_value != null) {
                sublength = calling_authentication_value.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)).encode(berOStream);
            }

            if (mechanism_name != null) {
                codeLength += mechanism_name.encode(berOStream, false);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 11)).encode(berOStream);
            }

            if (sender_acse_requirements != null) {
                codeLength += sender_acse_requirements.encode(berOStream, false);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 10)).encode(berOStream);
            }

            if (calling_AE_invocation_identifier != null) {
                sublength = calling_AE_invocation_identifier.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)).encode(berOStream);
            }

            if (calling_AP_invocation_identifier != null) {
                sublength = calling_AP_invocation_identifier.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)).encode(berOStream);
            }

            if (calling_AE_qualifier != null) {
                sublength = calling_AE_qualifier.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)).encode(berOStream);
            }

            if (calling_AP_title != null) {
                sublength = calling_AP_title.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)).encode(berOStream);
            }

            if (called_AE_invocation_identifier != null) {
                sublength = called_AE_invocation_identifier.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)).encode(berOStream);
            }

            if (called_AP_invocation_identifier != null) {
                sublength = called_AP_invocation_identifier.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)).encode(berOStream);
            }

            if (called_AE_qualifier != null) {
                sublength = called_AE_qualifier.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)).encode(berOStream);
            }

            if (called_AP_title != null) {
                sublength = called_AP_title.encode(berOStream, true);
                codeLength += sublength;
                codeLength += BerLength.encodeLength(berOStream, sublength);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)).encode(berOStream);
            }

            sublength = application_context_name.encode(berOStream, true);
            codeLength += sublength;
            codeLength += BerLength.encodeLength(berOStream, sublength);
            codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 1)).encode(berOStream);

            if (protocol_version != null) {
                codeLength += protocol_version.encode(berOStream, false);
                codeLength += (new BerIdentifier(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 0)).encode(berOStream);
            }

            codeLength += BerLength.encodeLength(berOStream, codeLength);
        }

        if (explicit) {
            codeLength += id.encode(berOStream);
        }

        return codeLength;

    }

    public int decode(InputStream iStream, boolean explicit) throws IOException {
        int codeLength = 0;
        int subCodeLength = 0;
        int choiceDecodeLength = 0;
        BerIdentifier berIdentifier = new BerIdentifier();
        boolean decodedIdentifier = false;

        if (explicit) {
            codeLength += id.decodeAndCheck(iStream);
        }

        BerLength length = new BerLength();
        codeLength += length.decode(iStream);

        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 0)) {
                protocol_version = new BerBitString();
                subCodeLength += protocol_version.decode(iStream, false);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 1)) {
                subCodeLength += new BerLength().decode(iStream);
                application_context_name = new BerObjectIdentifier();
                subCodeLength += application_context_name.decode(iStream, true);
                decodedIdentifier = false;
            } else {
                throw new IOException("Identifier does not macht required sequence element identifer.");
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 2)) {
                subCodeLength += new BerLength().decode(iStream);
                called_AP_title = new AP_title();
                choiceDecodeLength = called_AP_title.decode(iStream, null);
                if (choiceDecodeLength != 0) {
                    decodedIdentifier = false;
                    subCodeLength += choiceDecodeLength;
                }
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 3)) {
                subCodeLength += new BerLength().decode(iStream);
                called_AE_qualifier = new AE_qualifier();
                choiceDecodeLength = called_AE_qualifier.decode(iStream, null);
                if (choiceDecodeLength != 0) {
                    decodedIdentifier = false;
                    subCodeLength += choiceDecodeLength;
                }
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 4)) {
                subCodeLength += new BerLength().decode(iStream);
                called_AP_invocation_identifier = new BerInteger();
                subCodeLength += called_AP_invocation_identifier.decode(iStream, true);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 5)) {
                subCodeLength += new BerLength().decode(iStream);
                called_AE_invocation_identifier = new BerInteger();
                subCodeLength += called_AE_invocation_identifier.decode(iStream, true);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 6)) {
                subCodeLength += new BerLength().decode(iStream);
                calling_AP_title = new AP_title();
                choiceDecodeLength = calling_AP_title.decode(iStream, null);
                if (choiceDecodeLength != 0) {
                    decodedIdentifier = false;
                    subCodeLength += choiceDecodeLength;
                }
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 7)) {
                subCodeLength += new BerLength().decode(iStream);
                calling_AE_qualifier = new AE_qualifier();
                choiceDecodeLength = calling_AE_qualifier.decode(iStream, null);
                if (choiceDecodeLength != 0) {
                    decodedIdentifier = false;
                    subCodeLength += choiceDecodeLength;
                }
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 8)) {
                subCodeLength += new BerLength().decode(iStream);
                calling_AP_invocation_identifier = new BerInteger();
                subCodeLength += calling_AP_invocation_identifier.decode(iStream, true);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 9)) {
                subCodeLength += new BerLength().decode(iStream);
                calling_AE_invocation_identifier = new BerInteger();
                subCodeLength += calling_AE_invocation_identifier.decode(iStream, true);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 10)) {
                sender_acse_requirements = new BerBitString();
                subCodeLength += sender_acse_requirements.decode(iStream, false);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 11)) {
                mechanism_name = new BerObjectIdentifier();
                subCodeLength += mechanism_name.decode(iStream, false);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 12)) {
                subCodeLength += new BerLength().decode(iStream);
                calling_authentication_value = new Authentication_value();
                choiceDecodeLength = calling_authentication_value.decode(iStream, null);
                if (choiceDecodeLength != 0) {
                    decodedIdentifier = false;
                    subCodeLength += choiceDecodeLength;
                }
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 13)) {
                application_context_name_list = new Application_context_name_list();
                subCodeLength += application_context_name_list.decode(iStream, false);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.PRIMITIVE, 29)) {
                implementation_information = new BerGraphicString();
                subCodeLength += implementation_information.decode(iStream, false);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength < length.val) {
            if (decodedIdentifier == false) {
                subCodeLength += berIdentifier.decode(iStream);
                decodedIdentifier = true;
            }
            if (berIdentifier.equals(BerIdentifier.CONTEXT_CLASS, BerIdentifier.CONSTRUCTED, 30)) {
                user_information = new Association_information();
                subCodeLength += user_information.decode(iStream, false);
                decodedIdentifier = false;
            }
        }
        if (subCodeLength != length.val) {
            throw new IOException("Decoded sequence has wrong length tag");

        }
        codeLength += subCodeLength;

        return codeLength;
    }

    public void encodeAndSave(int encodingSizeGuess) throws IOException {
        BerByteArrayOutputStream berOStream = new BerByteArrayOutputStream(encodingSizeGuess);
        encode(berOStream, false);
        code = berOStream.getArray();
    }
}
